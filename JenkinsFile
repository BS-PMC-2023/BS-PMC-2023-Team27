pipeline {
    agent none
    stages {

        stage('Build') {
            agent {
                docker {
                    image 'python:3.8'
                }
            }
            steps {
		            withEnv(["HOME=${env.WORKSPACE}"]) {
		               sh 'pip install -r requirements.txt'
                      
					}
			}
        }
         stage(' Unit Tests') {
            agent {
                docker {
                    image 'python:3.8'
                }
            }
            steps {
		            withEnv(["HOME=${env.WORKSPACE}"]) {
                sh 'python3 manage.py test Boards --tag=unit-test'
		      }
			}
        }

        stage(' integration-test') {
            agent {
                docker {
                    image 'python:3.8'
                }
            }
            steps {
		            withEnv(["HOME=${env.WORKSPACE}"]) {
                sh 'python3 manage.py test Boards --tag=integration-test'
		      }
			}
        }



       stage(' unit test coverage') {
        agent {
                docker {
                    image 'python:3.8'
                }
            }
			steps {

					withEnv(["HOME=${env.WORKSPACE}"]) {

						sh "python3 -m coverage run --source 'Boards' manage.py test"
						sh "python3 -m coverage report --fail-under=50"
						sh "python3 -m coverage report Boards/tests/tests.py"
						sh "python3 -m coverage report Boards/models.py"
						sh "python3 -m coverage report Boards/views.py"
						sh "python3 -m coverage report Boards/forms.py"
						sh "python3 -m coverage report Boards/apps.py"
						sh "python3 -m coverage report Boards/admin.py"

					}


			}
		}










        
    }
		

        

}
